apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kserve-resources.fullname" . }}-kserve-controller-manager
  labels:
    control-plane: kserve-controller-manager
    controller-tools.k8s.io: "1.0"
  {{- include "kserve-resources.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      control-plane: kserve-controller-manager
      controller-tools.k8s.io: "1.0"
    {{- include "kserve-resources.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kserve-controller-manager
        control-plane: kserve-controller-manager
        controller-tools.k8s.io: "1.0"
      {{- include "kserve-resources.selectorLabels" . | nindent 8 }}
      annotations:
        kubectl.kubernetes.io/default-container: manager
    spec:
      containers:
      - args: {{- toYaml .Values.kserveControllerManager.manager.args | nindent 8 }}
        command:
        - /manager
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: SECRET_NAME
          value: {{ quote .Values.kserveControllerManager.manager.env.secretName }}
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        image: {{ .Values.kserveControllerManager.manager.image.repository }}:{{ .Values.kserveControllerManager.manager.image.tag
          | default .Chart.AppVersion }}
        imagePullPolicy: {{ .Values.kserveControllerManager.manager.imagePullPolicy }}
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 30
          timeoutSeconds: 5
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 30
          periodSeconds: 5
          timeoutSeconds: 5
        resources: {{- toYaml .Values.kserveControllerManager.manager.resources | nindent
          10 }}
        securityContext: {{- toYaml .Values.kserveControllerManager.manager.containerSecurityContext
          | nindent 10 }}
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      - args: {{- toYaml .Values.kserveControllerManager.kubeRbacProxy.args | nindent 8
          }}
        env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        image: '{{ .Values.kserveControllerManager.kubeRbacProxy.image.repository }}:{{
          .Values.kserveControllerManager.kubeRbacProxy.image.tag | default .Chart.AppVersion
          }}'
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources: {}
        securityContext: {{- toYaml .Values.kserveControllerManager.kubeRbacProxy.containerSecurityContext
          | nindent 10 }}
      securityContext: {{- toYaml .Values.kserveControllerManager.podSecurityContext |
        nindent 8 }}
      serviceAccountName: {{ include "kserve-resources.fullname" . }}-kserve-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: kserve-webhook-server-cert
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kserve-resources.fullname" . }}-kserve-llmisvc-controller-manager
  labels:
    app.kubernetes.io/component: controller
    control-plane: llmisvc-controller-manager
    controller-tools.k8s.io: "1.0"
  {{- include "kserve-resources.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.kserveLlmisvcControllerManager.replicas }}
  strategy:
    rollingUpdate:
      maxSurge: {{ .Values.kserveLlmisvcControllerManager.strategy.rollingUpdate.maxSurge
        }}
      maxUnavailable: {{ .Values.kserveLlmisvcControllerManager.strategy.rollingUpdate.maxUnavailable
        }}
    type: {{ .Values.kserveLlmisvcControllerManager.strategy.type | quote }}
  selector:
    matchLabels:
      control-plane: llmisvc-controller-manager
      controller-tools.k8s.io: "1.0"
    {{- include "kserve-resources.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/name: kserve-llmisvc-controller-manager
        control-plane: llmisvc-controller-manager
        controller-tools.k8s.io: "1.0"
      {{- include "kserve-resources.selectorLabels" . | nindent 8 }}
      annotations:
        kubectl.kubernetes.io/default-container: manager
    spec:
      containers:
      - args: {{- toYaml .Values.kserveLlmisvcControllerManager.manager.args | nindent
          8 }}
        command:
        - /manager
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        image: '{{ .Values.kserveLlmisvcControllerManager.manager.image.repository }}:{{
          .Values.kserveLlmisvcControllerManager.manager.image.tag | default .Chart.AppVersion
          }}'
        imagePullPolicy: {{ .Values.kserveLlmisvcControllerManager.manager.imagePullPolicy
          }}
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        - containerPort: 8443
          name: metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 30
          periodSeconds: 5
          timeoutSeconds: 5
        resources: {{- toYaml .Values.kserveLlmisvcControllerManager.manager.resources
          | nindent 10 }}
        securityContext: {{- toYaml .Values.kserveLlmisvcControllerManager.manager.containerSecurityContext
          | nindent 10 }}
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      securityContext: {{- toYaml .Values.kserveLlmisvcControllerManager.podSecurityContext
        | nindent 8 }}
      serviceAccountName: {{ include "kserve-resources.fullname" . }}-llmisvc-controller-manager
      terminationGracePeriodSeconds: 30
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: llmisvc-webhook-server-cert
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kserve-resources.fullname" . }}-kserve-localmodel-controller-manager
  labels:
    control-plane: kserve-localmodel-controller-manager
    controller-tools.k8s.io: "1.0"
  {{- include "kserve-resources.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      control-plane: kserve-localmodel-controller-manager
      controller-tools.k8s.io: "1.0"
    {{- include "kserve-resources.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kserve-localmodel-controller-manager
        control-plane: kserve-localmodel-controller-manager
        controller-tools.k8s.io: "1.0"
      {{- include "kserve-resources.selectorLabels" . | nindent 8 }}
      annotations:
        kubectl.kubernetes.io/default-container: manager
    spec:
      containers:
      - command:
        - /manager
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        image: '{{ .Values.kserveLocalmodelControllerManager.manager.image.repository }}:{{
          .Values.kserveLocalmodelControllerManager.manager.image.tag | default .Chart.AppVersion
          }}'
        imagePullPolicy: {{ .Values.kserveLocalmodelControllerManager.manager.imagePullPolicy
          }}
        name: manager
        resources: {{- toYaml .Values.kserveLocalmodelControllerManager.manager.resources
          | nindent 10 }}
        securityContext: {{- toYaml .Values.kserveLocalmodelControllerManager.manager.containerSecurityContext
          | nindent 10 }}
      securityContext: {{- toYaml .Values.kserveLocalmodelControllerManager.podSecurityContext
        | nindent 8 }}
      serviceAccountName: {{ include "kserve-resources.fullname" . }}-kserve-localmodel-controller-manager
      terminationGracePeriodSeconds: 10
