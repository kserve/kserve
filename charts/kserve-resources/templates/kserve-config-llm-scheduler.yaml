apiVersion: serving.kserve.io/v1alpha1
kind: LLMInferenceServiceConfig
metadata:
  name: {{ include "kserve-resources.fullname" . }}-kserve-config-llm-scheduler
  labels:
  {{- include "kserve-resources.labels" . | nindent 4 }}
spec:
  router:
    scheduler:
      pool:
        spec:
          extensionRef:
            failureMode: FailOpen
            kind: Service
            name: '{{ "{{" }} ChildName .ObjectMeta.Name {{ "`" }}-epp-service{{ "`" }} {{ "}}" }}'
          selector: {}
          targetPortNumber: 8000
      template:
        containers:
        - args:
          - --poolName
          - '{{ "{{" }} ChildName .ObjectMeta.Name {{ "`" }}-inference-pool{{ "`" }} {{ "}}" }}'
          - --poolNamespace
          - '{{ "{{" }} .ObjectMeta.Namespace {{ "}}" }}'
          - --zap-encoder
          - json
          - --grpcPort
          - "9002"
          - --grpcHealthPort
          - "9003"
          image: ghcr.io/llm-d/llm-d-inference-scheduler:v0.2.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 9003
              service: envoy.service.ext_proc.v3.ExternalProcessor
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: main
          ports:
          - containerPort: 9002
            name: grpc
            protocol: TCP
          - containerPort: 9003
            name: grpc-health
            protocol: TCP
          - containerPort: 9090
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 9003
              service: envoy.service.ext_proc.v3.ExternalProcessor
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 256m
              memory: 500Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /etc/ssl/certs
            name: tls-certs
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        volumes:
        - name: tls-certs
          secret:
            secretName: '{{ "{{" }} ChildName .ObjectMeta.Name {{ "`" }}-kserve-self-signed-certs{{ "`" }} {{ "}}" }}'
