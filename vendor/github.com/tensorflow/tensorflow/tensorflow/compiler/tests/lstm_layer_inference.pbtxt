# Generated by running lstm_test, setting --dump_graph_dir.

node {
  name: "random_uniform/shape"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\010\000\000\000\020\000\000"
      }
    }
  }
}
node {
  name: "random_uniform/min"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "random_uniform/max"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "random_uniform/shape"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "random_uniform/sub"
  op: "Sub"
  input: "random_uniform/max"
  input: "random_uniform/min"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "random_uniform/mul"
  op: "Mul"
  input: "random_uniform/RandomUniform"
  input: "random_uniform/sub"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "random_uniform"
  op: "Add"
  input: "random_uniform/mul"
  input: "random_uniform/min"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "weights"
  op: "Variable"
  device: "/device:GPU:*"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
        dim {
          size: 4096
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "weights/Assign"
  op: "Assign"
  input: "weights"
  input: "random_uniform"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "weights/read"
  op: "Identity"
  input: "weights"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@weights"
      }
    }
  }
}
node {
  name: "init_m"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "init_c"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inputs/random_uniform/shape"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "inputs/random_uniform/min"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inputs/random_uniform/max"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inputs/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inputs/random_uniform/shape"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inputs/random_uniform/sub"
  op: "Sub"
  input: "inputs/random_uniform/max"
  input: "inputs/random_uniform/min"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inputs/random_uniform/mul"
  op: "Mul"
  input: "inputs/random_uniform/RandomUniform"
  input: "inputs/random_uniform/sub"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inputs/random_uniform"
  op: "Add"
  input: "inputs/random_uniform/mul"
  input: "inputs/random_uniform/min"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inputs/x_seq_0"
  op: "Variable"
  device: "/device:GPU:*"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inputs/x_seq_0/Assign"
  op: "Assign"
  input: "inputs/x_seq_0"
  input: "inputs/random_uniform"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inputs/x_seq_0"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inputs/x_seq_0/read"
  op: "Identity"
  input: "inputs/x_seq_0"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inputs/x_seq_0"
      }
    }
  }
}
node {
  name: "inputs/random_uniform_1/shape"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inputs/random_uniform_1/min"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inputs/random_uniform_1/max"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inputs/random_uniform_1/RandomUniform"
  op: "RandomUniform"
  input: "inputs/random_uniform_1/shape"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inputs/random_uniform_1/sub"
  op: "Sub"
  input: "inputs/random_uniform_1/max"
  input: "inputs/random_uniform_1/min"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inputs/random_uniform_1/mul"
  op: "Mul"
  input: "inputs/random_uniform_1/RandomUniform"
  input: "inputs/random_uniform_1/sub"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inputs/random_uniform_1"
  op: "Add"
  input: "inputs/random_uniform_1/mul"
  input: "inputs/random_uniform_1/min"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inputs/pad_seq_0"
  op: "Variable"
  device: "/device:GPU:*"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inputs/pad_seq_0/Assign"
  op: "Assign"
  input: "inputs/pad_seq_0"
  input: "inputs/random_uniform_1"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inputs/pad_seq_0"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inputs/pad_seq_0/read"
  op: "Identity"
  input: "inputs/pad_seq_0"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inputs/pad_seq_0"
      }
    }
  }
}
node {
  name: "inputs/random_uniform_2/shape"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "inputs/random_uniform_2/min"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inputs/random_uniform_2/max"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inputs/random_uniform_2/RandomUniform"
  op: "RandomUniform"
  input: "inputs/random_uniform_2/shape"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inputs/random_uniform_2/sub"
  op: "Sub"
  input: "inputs/random_uniform_2/max"
  input: "inputs/random_uniform_2/min"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inputs/random_uniform_2/mul"
  op: "Mul"
  input: "inputs/random_uniform_2/RandomUniform"
  input: "inputs/random_uniform_2/sub"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inputs/random_uniform_2"
  op: "Add"
  input: "inputs/random_uniform_2/mul"
  input: "inputs/random_uniform_2/min"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inputs/x_seq_1"
  op: "Variable"
  device: "/device:GPU:*"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inputs/x_seq_1/Assign"
  op: "Assign"
  input: "inputs/x_seq_1"
  input: "inputs/random_uniform_2"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inputs/x_seq_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inputs/x_seq_1/read"
  op: "Identity"
  input: "inputs/x_seq_1"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inputs/x_seq_1"
      }
    }
  }
}
node {
  name: "inputs/random_uniform_3/shape"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inputs/random_uniform_3/min"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inputs/random_uniform_3/max"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inputs/random_uniform_3/RandomUniform"
  op: "RandomUniform"
  input: "inputs/random_uniform_3/shape"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inputs/random_uniform_3/sub"
  op: "Sub"
  input: "inputs/random_uniform_3/max"
  input: "inputs/random_uniform_3/min"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inputs/random_uniform_3/mul"
  op: "Mul"
  input: "inputs/random_uniform_3/RandomUniform"
  input: "inputs/random_uniform_3/sub"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inputs/random_uniform_3"
  op: "Add"
  input: "inputs/random_uniform_3/mul"
  input: "inputs/random_uniform_3/min"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inputs/pad_seq_1"
  op: "Variable"
  device: "/device:GPU:*"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inputs/pad_seq_1/Assign"
  op: "Assign"
  input: "inputs/pad_seq_1"
  input: "inputs/random_uniform_3"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inputs/pad_seq_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inputs/pad_seq_1/read"
  op: "Identity"
  input: "inputs/pad_seq_1"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inputs/pad_seq_1"
      }
    }
  }
}
node {
  name: "inputs/random_uniform_4/shape"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "inputs/random_uniform_4/min"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inputs/random_uniform_4/max"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inputs/random_uniform_4/RandomUniform"
  op: "RandomUniform"
  input: "inputs/random_uniform_4/shape"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inputs/random_uniform_4/sub"
  op: "Sub"
  input: "inputs/random_uniform_4/max"
  input: "inputs/random_uniform_4/min"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inputs/random_uniform_4/mul"
  op: "Mul"
  input: "inputs/random_uniform_4/RandomUniform"
  input: "inputs/random_uniform_4/sub"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inputs/random_uniform_4"
  op: "Add"
  input: "inputs/random_uniform_4/mul"
  input: "inputs/random_uniform_4/min"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inputs/x_seq_2"
  op: "Variable"
  device: "/device:GPU:*"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inputs/x_seq_2/Assign"
  op: "Assign"
  input: "inputs/x_seq_2"
  input: "inputs/random_uniform_4"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inputs/x_seq_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inputs/x_seq_2/read"
  op: "Identity"
  input: "inputs/x_seq_2"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inputs/x_seq_2"
      }
    }
  }
}
node {
  name: "inputs/random_uniform_5/shape"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inputs/random_uniform_5/min"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inputs/random_uniform_5/max"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inputs/random_uniform_5/RandomUniform"
  op: "RandomUniform"
  input: "inputs/random_uniform_5/shape"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inputs/random_uniform_5/sub"
  op: "Sub"
  input: "inputs/random_uniform_5/max"
  input: "inputs/random_uniform_5/min"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inputs/random_uniform_5/mul"
  op: "Mul"
  input: "inputs/random_uniform_5/RandomUniform"
  input: "inputs/random_uniform_5/sub"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inputs/random_uniform_5"
  op: "Add"
  input: "inputs/random_uniform_5/mul"
  input: "inputs/random_uniform_5/min"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inputs/pad_seq_2"
  op: "Variable"
  device: "/device:GPU:*"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inputs/pad_seq_2/Assign"
  op: "Assign"
  input: "inputs/pad_seq_2"
  input: "inputs/random_uniform_5"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inputs/pad_seq_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inputs/pad_seq_2/read"
  op: "Identity"
  input: "inputs/pad_seq_2"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inputs/pad_seq_2"
      }
    }
  }
}
node {
  name: "inputs/random_uniform_6/shape"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "inputs/random_uniform_6/min"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inputs/random_uniform_6/max"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inputs/random_uniform_6/RandomUniform"
  op: "RandomUniform"
  input: "inputs/random_uniform_6/shape"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inputs/random_uniform_6/sub"
  op: "Sub"
  input: "inputs/random_uniform_6/max"
  input: "inputs/random_uniform_6/min"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inputs/random_uniform_6/mul"
  op: "Mul"
  input: "inputs/random_uniform_6/RandomUniform"
  input: "inputs/random_uniform_6/sub"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inputs/random_uniform_6"
  op: "Add"
  input: "inputs/random_uniform_6/mul"
  input: "inputs/random_uniform_6/min"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inputs/x_seq_3"
  op: "Variable"
  device: "/device:GPU:*"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inputs/x_seq_3/Assign"
  op: "Assign"
  input: "inputs/x_seq_3"
  input: "inputs/random_uniform_6"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inputs/x_seq_3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inputs/x_seq_3/read"
  op: "Identity"
  input: "inputs/x_seq_3"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inputs/x_seq_3"
      }
    }
  }
}
node {
  name: "inputs/random_uniform_7/shape"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inputs/random_uniform_7/min"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inputs/random_uniform_7/max"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inputs/random_uniform_7/RandomUniform"
  op: "RandomUniform"
  input: "inputs/random_uniform_7/shape"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inputs/random_uniform_7/sub"
  op: "Sub"
  input: "inputs/random_uniform_7/max"
  input: "inputs/random_uniform_7/min"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inputs/random_uniform_7/mul"
  op: "Mul"
  input: "inputs/random_uniform_7/RandomUniform"
  input: "inputs/random_uniform_7/sub"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inputs/random_uniform_7"
  op: "Add"
  input: "inputs/random_uniform_7/mul"
  input: "inputs/random_uniform_7/min"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inputs/pad_seq_3"
  op: "Variable"
  device: "/device:GPU:*"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inputs/pad_seq_3/Assign"
  op: "Assign"
  input: "inputs/pad_seq_3"
  input: "inputs/random_uniform_7"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inputs/pad_seq_3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inputs/pad_seq_3/read"
  op: "Identity"
  input: "inputs/pad_seq_3"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inputs/pad_seq_3"
      }
    }
  }
}
node {
  name: "inputs/random_uniform_8/shape"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "inputs/random_uniform_8/min"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inputs/random_uniform_8/max"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inputs/random_uniform_8/RandomUniform"
  op: "RandomUniform"
  input: "inputs/random_uniform_8/shape"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inputs/random_uniform_8/sub"
  op: "Sub"
  input: "inputs/random_uniform_8/max"
  input: "inputs/random_uniform_8/min"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inputs/random_uniform_8/mul"
  op: "Mul"
  input: "inputs/random_uniform_8/RandomUniform"
  input: "inputs/random_uniform_8/sub"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inputs/random_uniform_8"
  op: "Add"
  input: "inputs/random_uniform_8/mul"
  input: "inputs/random_uniform_8/min"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inputs/x_seq_4"
  op: "Variable"
  device: "/device:GPU:*"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inputs/x_seq_4/Assign"
  op: "Assign"
  input: "inputs/x_seq_4"
  input: "inputs/random_uniform_8"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inputs/x_seq_4"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inputs/x_seq_4/read"
  op: "Identity"
  input: "inputs/x_seq_4"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inputs/x_seq_4"
      }
    }
  }
}
node {
  name: "inputs/random_uniform_9/shape"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inputs/random_uniform_9/min"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inputs/random_uniform_9/max"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inputs/random_uniform_9/RandomUniform"
  op: "RandomUniform"
  input: "inputs/random_uniform_9/shape"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inputs/random_uniform_9/sub"
  op: "Sub"
  input: "inputs/random_uniform_9/max"
  input: "inputs/random_uniform_9/min"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inputs/random_uniform_9/mul"
  op: "Mul"
  input: "inputs/random_uniform_9/RandomUniform"
  input: "inputs/random_uniform_9/sub"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inputs/random_uniform_9"
  op: "Add"
  input: "inputs/random_uniform_9/mul"
  input: "inputs/random_uniform_9/min"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inputs/pad_seq_4"
  op: "Variable"
  device: "/device:GPU:*"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inputs/pad_seq_4/Assign"
  op: "Assign"
  input: "inputs/pad_seq_4"
  input: "inputs/random_uniform_9"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inputs/pad_seq_4"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inputs/pad_seq_4/read"
  op: "Identity"
  input: "inputs/pad_seq_4"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inputs/pad_seq_4"
      }
    }
  }
}
node {
  name: "lstm_0/concat/axis"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm_0/concat"
  op: "ConcatV2"
  input: "inputs/x_seq_0/read"
  input: "init_m"
  input: "lstm_0/concat/axis"
  device: "/device:GPU:*"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_0/MatMul"
  op: "MatMul"
  input: "lstm_0/concat"
  input: "weights/read"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "lstm_0/split/split_dim"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm_0/split"
  op: "Split"
  input: "lstm_0/split/split_dim"
  input: "lstm_0/MatMul"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "lstm_0/Tanh"
  op: "Tanh"
  input: "lstm_0/split"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_0/Sigmoid"
  op: "Sigmoid"
  input: "lstm_0/split:1"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_0/Sigmoid_1"
  op: "Sigmoid"
  input: "lstm_0/split:2"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_0/Sigmoid_2"
  op: "Sigmoid"
  input: "lstm_0/split:3"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_0/mul"
  op: "Mul"
  input: "lstm_0/Sigmoid_1"
  input: "init_c"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_0/Minimum/y"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "lstm_0/Minimum"
  op: "Minimum"
  input: "lstm_0/mul"
  input: "lstm_0/Minimum/y"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_0/Maximum/y"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.0
      }
    }
  }
}
node {
  name: "lstm_0/Maximum"
  op: "Maximum"
  input: "lstm_0/Minimum"
  input: "lstm_0/Maximum/y"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_0/mul_1"
  op: "Mul"
  input: "lstm_0/Sigmoid"
  input: "lstm_0/Tanh"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_0/Minimum_1/y"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "lstm_0/Minimum_1"
  op: "Minimum"
  input: "lstm_0/mul_1"
  input: "lstm_0/Minimum_1/y"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_0/Maximum_1/y"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.0
      }
    }
  }
}
node {
  name: "lstm_0/Maximum_1"
  op: "Maximum"
  input: "lstm_0/Minimum_1"
  input: "lstm_0/Maximum_1/y"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_0/add"
  op: "Add"
  input: "lstm_0/Maximum"
  input: "lstm_0/Maximum_1"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_0/Minimum_2/y"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "lstm_0/Minimum_2"
  op: "Minimum"
  input: "lstm_0/add"
  input: "lstm_0/Minimum_2/y"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_0/Maximum_2/y"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.0
      }
    }
  }
}
node {
  name: "lstm_0/Maximum_2"
  op: "Maximum"
  input: "lstm_0/Minimum_2"
  input: "lstm_0/Maximum_2/y"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_0/mul_2"
  op: "Mul"
  input: "lstm_0/Sigmoid_2"
  input: "lstm_0/Maximum_2"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_0/Minimum_3/y"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "lstm_0/Minimum_3"
  op: "Minimum"
  input: "lstm_0/mul_2"
  input: "lstm_0/Minimum_3/y"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_0/Maximum_3/y"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.0
      }
    }
  }
}
node {
  name: "lstm_0/Maximum_3"
  op: "Maximum"
  input: "lstm_0/Minimum_3"
  input: "lstm_0/Maximum_3/y"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_0/mul_3"
  op: "Mul"
  input: "init_c"
  input: "inputs/pad_seq_0/read"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_0/sub/x"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "lstm_0/sub"
  op: "Sub"
  input: "lstm_0/sub/x"
  input: "inputs/pad_seq_0/read"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_0/mul_4"
  op: "Mul"
  input: "lstm_0/Maximum_2"
  input: "lstm_0/sub"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_0/add_1"
  op: "Add"
  input: "lstm_0/mul_3"
  input: "lstm_0/mul_4"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_0/mul_5"
  op: "Mul"
  input: "init_m"
  input: "inputs/pad_seq_0/read"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_0/sub_1/x"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "lstm_0/sub_1"
  op: "Sub"
  input: "lstm_0/sub_1/x"
  input: "inputs/pad_seq_0/read"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_0/mul_6"
  op: "Mul"
  input: "lstm_0/Maximum_3"
  input: "lstm_0/sub_1"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_0/add_2"
  op: "Add"
  input: "lstm_0/mul_5"
  input: "lstm_0/mul_6"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_0/out"
  op: "Identity"
  input: "lstm_0/add_2"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_1/concat/axis"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm_1/concat"
  op: "ConcatV2"
  input: "inputs/x_seq_1/read"
  input: "lstm_0/add_2"
  input: "lstm_1/concat/axis"
  device: "/device:GPU:*"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_1/MatMul"
  op: "MatMul"
  input: "lstm_1/concat"
  input: "weights/read"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "lstm_1/split/split_dim"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm_1/split"
  op: "Split"
  input: "lstm_1/split/split_dim"
  input: "lstm_1/MatMul"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "lstm_1/Tanh"
  op: "Tanh"
  input: "lstm_1/split"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_1/Sigmoid"
  op: "Sigmoid"
  input: "lstm_1/split:1"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_1/Sigmoid_1"
  op: "Sigmoid"
  input: "lstm_1/split:2"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_1/Sigmoid_2"
  op: "Sigmoid"
  input: "lstm_1/split:3"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_1/mul"
  op: "Mul"
  input: "lstm_1/Sigmoid_1"
  input: "lstm_0/add_1"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_1/Minimum/y"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "lstm_1/Minimum"
  op: "Minimum"
  input: "lstm_1/mul"
  input: "lstm_1/Minimum/y"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_1/Maximum/y"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.0
      }
    }
  }
}
node {
  name: "lstm_1/Maximum"
  op: "Maximum"
  input: "lstm_1/Minimum"
  input: "lstm_1/Maximum/y"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_1/mul_1"
  op: "Mul"
  input: "lstm_1/Sigmoid"
  input: "lstm_1/Tanh"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_1/Minimum_1/y"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "lstm_1/Minimum_1"
  op: "Minimum"
  input: "lstm_1/mul_1"
  input: "lstm_1/Minimum_1/y"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_1/Maximum_1/y"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.0
      }
    }
  }
}
node {
  name: "lstm_1/Maximum_1"
  op: "Maximum"
  input: "lstm_1/Minimum_1"
  input: "lstm_1/Maximum_1/y"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_1/add"
  op: "Add"
  input: "lstm_1/Maximum"
  input: "lstm_1/Maximum_1"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_1/Minimum_2/y"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "lstm_1/Minimum_2"
  op: "Minimum"
  input: "lstm_1/add"
  input: "lstm_1/Minimum_2/y"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_1/Maximum_2/y"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.0
      }
    }
  }
}
node {
  name: "lstm_1/Maximum_2"
  op: "Maximum"
  input: "lstm_1/Minimum_2"
  input: "lstm_1/Maximum_2/y"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_1/mul_2"
  op: "Mul"
  input: "lstm_1/Sigmoid_2"
  input: "lstm_1/Maximum_2"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_1/Minimum_3/y"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "lstm_1/Minimum_3"
  op: "Minimum"
  input: "lstm_1/mul_2"
  input: "lstm_1/Minimum_3/y"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_1/Maximum_3/y"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.0
      }
    }
  }
}
node {
  name: "lstm_1/Maximum_3"
  op: "Maximum"
  input: "lstm_1/Minimum_3"
  input: "lstm_1/Maximum_3/y"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_1/mul_3"
  op: "Mul"
  input: "lstm_0/add_1"
  input: "inputs/pad_seq_1/read"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_1/sub/x"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "lstm_1/sub"
  op: "Sub"
  input: "lstm_1/sub/x"
  input: "inputs/pad_seq_1/read"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_1/mul_4"
  op: "Mul"
  input: "lstm_1/Maximum_2"
  input: "lstm_1/sub"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_1/add_1"
  op: "Add"
  input: "lstm_1/mul_3"
  input: "lstm_1/mul_4"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_1/mul_5"
  op: "Mul"
  input: "lstm_0/add_2"
  input: "inputs/pad_seq_1/read"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_1/sub_1/x"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "lstm_1/sub_1"
  op: "Sub"
  input: "lstm_1/sub_1/x"
  input: "inputs/pad_seq_1/read"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_1/mul_6"
  op: "Mul"
  input: "lstm_1/Maximum_3"
  input: "lstm_1/sub_1"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_1/add_2"
  op: "Add"
  input: "lstm_1/mul_5"
  input: "lstm_1/mul_6"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_1/out"
  op: "Identity"
  input: "lstm_1/add_2"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_2/concat/axis"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm_2/concat"
  op: "ConcatV2"
  input: "inputs/x_seq_2/read"
  input: "lstm_1/add_2"
  input: "lstm_2/concat/axis"
  device: "/device:GPU:*"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_2/MatMul"
  op: "MatMul"
  input: "lstm_2/concat"
  input: "weights/read"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "lstm_2/split/split_dim"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm_2/split"
  op: "Split"
  input: "lstm_2/split/split_dim"
  input: "lstm_2/MatMul"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "lstm_2/Tanh"
  op: "Tanh"
  input: "lstm_2/split"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_2/Sigmoid"
  op: "Sigmoid"
  input: "lstm_2/split:1"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_2/Sigmoid_1"
  op: "Sigmoid"
  input: "lstm_2/split:2"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_2/Sigmoid_2"
  op: "Sigmoid"
  input: "lstm_2/split:3"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_2/mul"
  op: "Mul"
  input: "lstm_2/Sigmoid_1"
  input: "lstm_1/add_1"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_2/Minimum/y"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "lstm_2/Minimum"
  op: "Minimum"
  input: "lstm_2/mul"
  input: "lstm_2/Minimum/y"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_2/Maximum/y"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.0
      }
    }
  }
}
node {
  name: "lstm_2/Maximum"
  op: "Maximum"
  input: "lstm_2/Minimum"
  input: "lstm_2/Maximum/y"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_2/mul_1"
  op: "Mul"
  input: "lstm_2/Sigmoid"
  input: "lstm_2/Tanh"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_2/Minimum_1/y"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "lstm_2/Minimum_1"
  op: "Minimum"
  input: "lstm_2/mul_1"
  input: "lstm_2/Minimum_1/y"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_2/Maximum_1/y"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.0
      }
    }
  }
}
node {
  name: "lstm_2/Maximum_1"
  op: "Maximum"
  input: "lstm_2/Minimum_1"
  input: "lstm_2/Maximum_1/y"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_2/add"
  op: "Add"
  input: "lstm_2/Maximum"
  input: "lstm_2/Maximum_1"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_2/Minimum_2/y"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "lstm_2/Minimum_2"
  op: "Minimum"
  input: "lstm_2/add"
  input: "lstm_2/Minimum_2/y"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_2/Maximum_2/y"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.0
      }
    }
  }
}
node {
  name: "lstm_2/Maximum_2"
  op: "Maximum"
  input: "lstm_2/Minimum_2"
  input: "lstm_2/Maximum_2/y"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_2/mul_2"
  op: "Mul"
  input: "lstm_2/Sigmoid_2"
  input: "lstm_2/Maximum_2"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_2/Minimum_3/y"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "lstm_2/Minimum_3"
  op: "Minimum"
  input: "lstm_2/mul_2"
  input: "lstm_2/Minimum_3/y"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_2/Maximum_3/y"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.0
      }
    }
  }
}
node {
  name: "lstm_2/Maximum_3"
  op: "Maximum"
  input: "lstm_2/Minimum_3"
  input: "lstm_2/Maximum_3/y"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_2/mul_3"
  op: "Mul"
  input: "lstm_1/add_1"
  input: "inputs/pad_seq_2/read"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_2/sub/x"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "lstm_2/sub"
  op: "Sub"
  input: "lstm_2/sub/x"
  input: "inputs/pad_seq_2/read"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_2/mul_4"
  op: "Mul"
  input: "lstm_2/Maximum_2"
  input: "lstm_2/sub"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_2/add_1"
  op: "Add"
  input: "lstm_2/mul_3"
  input: "lstm_2/mul_4"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_2/mul_5"
  op: "Mul"
  input: "lstm_1/add_2"
  input: "inputs/pad_seq_2/read"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_2/sub_1/x"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "lstm_2/sub_1"
  op: "Sub"
  input: "lstm_2/sub_1/x"
  input: "inputs/pad_seq_2/read"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_2/mul_6"
  op: "Mul"
  input: "lstm_2/Maximum_3"
  input: "lstm_2/sub_1"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_2/add_2"
  op: "Add"
  input: "lstm_2/mul_5"
  input: "lstm_2/mul_6"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_2/out"
  op: "Identity"
  input: "lstm_2/add_2"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_3/concat/axis"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm_3/concat"
  op: "ConcatV2"
  input: "inputs/x_seq_3/read"
  input: "lstm_2/add_2"
  input: "lstm_3/concat/axis"
  device: "/device:GPU:*"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_3/MatMul"
  op: "MatMul"
  input: "lstm_3/concat"
  input: "weights/read"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "lstm_3/split/split_dim"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm_3/split"
  op: "Split"
  input: "lstm_3/split/split_dim"
  input: "lstm_3/MatMul"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "lstm_3/Tanh"
  op: "Tanh"
  input: "lstm_3/split"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_3/Sigmoid"
  op: "Sigmoid"
  input: "lstm_3/split:1"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_3/Sigmoid_1"
  op: "Sigmoid"
  input: "lstm_3/split:2"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_3/Sigmoid_2"
  op: "Sigmoid"
  input: "lstm_3/split:3"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_3/mul"
  op: "Mul"
  input: "lstm_3/Sigmoid_1"
  input: "lstm_2/add_1"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_3/Minimum/y"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "lstm_3/Minimum"
  op: "Minimum"
  input: "lstm_3/mul"
  input: "lstm_3/Minimum/y"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_3/Maximum/y"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.0
      }
    }
  }
}
node {
  name: "lstm_3/Maximum"
  op: "Maximum"
  input: "lstm_3/Minimum"
  input: "lstm_3/Maximum/y"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_3/mul_1"
  op: "Mul"
  input: "lstm_3/Sigmoid"
  input: "lstm_3/Tanh"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_3/Minimum_1/y"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "lstm_3/Minimum_1"
  op: "Minimum"
  input: "lstm_3/mul_1"
  input: "lstm_3/Minimum_1/y"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_3/Maximum_1/y"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.0
      }
    }
  }
}
node {
  name: "lstm_3/Maximum_1"
  op: "Maximum"
  input: "lstm_3/Minimum_1"
  input: "lstm_3/Maximum_1/y"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_3/add"
  op: "Add"
  input: "lstm_3/Maximum"
  input: "lstm_3/Maximum_1"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_3/Minimum_2/y"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "lstm_3/Minimum_2"
  op: "Minimum"
  input: "lstm_3/add"
  input: "lstm_3/Minimum_2/y"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_3/Maximum_2/y"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.0
      }
    }
  }
}
node {
  name: "lstm_3/Maximum_2"
  op: "Maximum"
  input: "lstm_3/Minimum_2"
  input: "lstm_3/Maximum_2/y"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_3/mul_2"
  op: "Mul"
  input: "lstm_3/Sigmoid_2"
  input: "lstm_3/Maximum_2"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_3/Minimum_3/y"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "lstm_3/Minimum_3"
  op: "Minimum"
  input: "lstm_3/mul_2"
  input: "lstm_3/Minimum_3/y"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_3/Maximum_3/y"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.0
      }
    }
  }
}
node {
  name: "lstm_3/Maximum_3"
  op: "Maximum"
  input: "lstm_3/Minimum_3"
  input: "lstm_3/Maximum_3/y"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_3/mul_3"
  op: "Mul"
  input: "lstm_2/add_1"
  input: "inputs/pad_seq_3/read"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_3/sub/x"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "lstm_3/sub"
  op: "Sub"
  input: "lstm_3/sub/x"
  input: "inputs/pad_seq_3/read"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_3/mul_4"
  op: "Mul"
  input: "lstm_3/Maximum_2"
  input: "lstm_3/sub"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_3/add_1"
  op: "Add"
  input: "lstm_3/mul_3"
  input: "lstm_3/mul_4"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_3/mul_5"
  op: "Mul"
  input: "lstm_2/add_2"
  input: "inputs/pad_seq_3/read"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_3/sub_1/x"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "lstm_3/sub_1"
  op: "Sub"
  input: "lstm_3/sub_1/x"
  input: "inputs/pad_seq_3/read"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_3/mul_6"
  op: "Mul"
  input: "lstm_3/Maximum_3"
  input: "lstm_3/sub_1"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_3/add_2"
  op: "Add"
  input: "lstm_3/mul_5"
  input: "lstm_3/mul_6"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_3/out"
  op: "Identity"
  input: "lstm_3/add_2"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_4/concat/axis"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm_4/concat"
  op: "ConcatV2"
  input: "inputs/x_seq_4/read"
  input: "lstm_3/add_2"
  input: "lstm_4/concat/axis"
  device: "/device:GPU:*"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "lstm_4/MatMul"
  op: "MatMul"
  input: "lstm_4/concat"
  input: "weights/read"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "lstm_4/split/split_dim"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "lstm_4/split"
  op: "Split"
  input: "lstm_4/split/split_dim"
  input: "lstm_4/MatMul"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "lstm_4/Tanh"
  op: "Tanh"
  input: "lstm_4/split"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_4/Sigmoid"
  op: "Sigmoid"
  input: "lstm_4/split:1"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_4/Sigmoid_1"
  op: "Sigmoid"
  input: "lstm_4/split:2"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_4/Sigmoid_2"
  op: "Sigmoid"
  input: "lstm_4/split:3"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_4/mul"
  op: "Mul"
  input: "lstm_4/Sigmoid_1"
  input: "lstm_3/add_1"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_4/Minimum/y"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "lstm_4/Minimum"
  op: "Minimum"
  input: "lstm_4/mul"
  input: "lstm_4/Minimum/y"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_4/Maximum/y"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.0
      }
    }
  }
}
node {
  name: "lstm_4/Maximum"
  op: "Maximum"
  input: "lstm_4/Minimum"
  input: "lstm_4/Maximum/y"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_4/mul_1"
  op: "Mul"
  input: "lstm_4/Sigmoid"
  input: "lstm_4/Tanh"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_4/Minimum_1/y"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "lstm_4/Minimum_1"
  op: "Minimum"
  input: "lstm_4/mul_1"
  input: "lstm_4/Minimum_1/y"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_4/Maximum_1/y"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.0
      }
    }
  }
}
node {
  name: "lstm_4/Maximum_1"
  op: "Maximum"
  input: "lstm_4/Minimum_1"
  input: "lstm_4/Maximum_1/y"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_4/add"
  op: "Add"
  input: "lstm_4/Maximum"
  input: "lstm_4/Maximum_1"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_4/Minimum_2/y"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "lstm_4/Minimum_2"
  op: "Minimum"
  input: "lstm_4/add"
  input: "lstm_4/Minimum_2/y"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_4/Maximum_2/y"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.0
      }
    }
  }
}
node {
  name: "lstm_4/Maximum_2"
  op: "Maximum"
  input: "lstm_4/Minimum_2"
  input: "lstm_4/Maximum_2/y"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_4/mul_2"
  op: "Mul"
  input: "lstm_4/Sigmoid_2"
  input: "lstm_4/Maximum_2"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_4/Minimum_3/y"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "lstm_4/Minimum_3"
  op: "Minimum"
  input: "lstm_4/mul_2"
  input: "lstm_4/Minimum_3/y"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_4/Maximum_3/y"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.0
      }
    }
  }
}
node {
  name: "lstm_4/Maximum_3"
  op: "Maximum"
  input: "lstm_4/Minimum_3"
  input: "lstm_4/Maximum_3/y"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_4/mul_3"
  op: "Mul"
  input: "lstm_3/add_1"
  input: "inputs/pad_seq_4/read"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_4/sub/x"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "lstm_4/sub"
  op: "Sub"
  input: "lstm_4/sub/x"
  input: "inputs/pad_seq_4/read"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_4/mul_4"
  op: "Mul"
  input: "lstm_4/Maximum_2"
  input: "lstm_4/sub"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_4/add_1"
  op: "Add"
  input: "lstm_4/mul_3"
  input: "lstm_4/mul_4"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_4/mul_5"
  op: "Mul"
  input: "lstm_3/add_2"
  input: "inputs/pad_seq_4/read"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_4/sub_1/x"
  op: "Const"
  device: "/device:GPU:*"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "lstm_4/sub_1"
  op: "Sub"
  input: "lstm_4/sub_1/x"
  input: "inputs/pad_seq_4/read"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_4/mul_6"
  op: "Mul"
  input: "lstm_4/Maximum_3"
  input: "lstm_4/sub_1"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_4/add_2"
  op: "Add"
  input: "lstm_4/mul_5"
  input: "lstm_4/mul_6"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "lstm_4/out"
  op: "Identity"
  input: "lstm_4/add_2"
  device: "/device:GPU:*"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
versions {
  producer: 19
}
