path: "tensorflow.keras.layers.LSTM"
tf_class {
  is_instance: "<class \'tensorflow.python.keras.layers.recurrent.LSTM\'>"
  is_instance: "<class \'tensorflow.python.keras.layers.recurrent.RNN\'>"
  is_instance: "<class \'tensorflow.python.keras.engine.base_layer.Layer\'>"
  is_instance: "<class \'tensorflow.python.training.checkpointable.base.CheckpointableBase\'>"
  is_instance: "<type \'object\'>"
  member {
    name: "activation"
    mtype: "<type \'property\'>"
  }
  member {
    name: "activity_regularizer"
    mtype: "<type \'property\'>"
  }
  member {
    name: "bias_constraint"
    mtype: "<type \'property\'>"
  }
  member {
    name: "bias_initializer"
    mtype: "<type \'property\'>"
  }
  member {
    name: "bias_regularizer"
    mtype: "<type \'property\'>"
  }
  member {
    name: "dropout"
    mtype: "<type \'property\'>"
  }
  member {
    name: "dtype"
    mtype: "<type \'property\'>"
  }
  member {
    name: "implementation"
    mtype: "<type \'property\'>"
  }
  member {
    name: "inbound_nodes"
    mtype: "<type \'property\'>"
  }
  member {
    name: "input"
    mtype: "<type \'property\'>"
  }
  member {
    name: "input_mask"
    mtype: "<type \'property\'>"
  }
  member {
    name: "input_shape"
    mtype: "<type \'property\'>"
  }
  member {
    name: "kernel_constraint"
    mtype: "<type \'property\'>"
  }
  member {
    name: "kernel_initializer"
    mtype: "<type \'property\'>"
  }
  member {
    name: "kernel_regularizer"
    mtype: "<type \'property\'>"
  }
  member {
    name: "losses"
    mtype: "<type \'property\'>"
  }
  member {
    name: "name"
    mtype: "<type \'property\'>"
  }
  member {
    name: "non_trainable_variables"
    mtype: "<type \'property\'>"
  }
  member {
    name: "non_trainable_weights"
    mtype: "<type \'property\'>"
  }
  member {
    name: "outbound_nodes"
    mtype: "<type \'property\'>"
  }
  member {
    name: "output"
    mtype: "<type \'property\'>"
  }
  member {
    name: "output_mask"
    mtype: "<type \'property\'>"
  }
  member {
    name: "output_shape"
    mtype: "<type \'property\'>"
  }
  member {
    name: "recurrent_activation"
    mtype: "<type \'property\'>"
  }
  member {
    name: "recurrent_constraint"
    mtype: "<type \'property\'>"
  }
  member {
    name: "recurrent_dropout"
    mtype: "<type \'property\'>"
  }
  member {
    name: "recurrent_initializer"
    mtype: "<type \'property\'>"
  }
  member {
    name: "recurrent_regularizer"
    mtype: "<type \'property\'>"
  }
  member {
    name: "states"
    mtype: "<type \'property\'>"
  }
  member {
    name: "trainable_variables"
    mtype: "<type \'property\'>"
  }
  member {
    name: "trainable_weights"
    mtype: "<type \'property\'>"
  }
  member {
    name: "unit_forget_bias"
    mtype: "<type \'property\'>"
  }
  member {
    name: "units"
    mtype: "<type \'property\'>"
  }
  member {
    name: "updates"
    mtype: "<type \'property\'>"
  }
  member {
    name: "use_bias"
    mtype: "<type \'property\'>"
  }
  member {
    name: "variables"
    mtype: "<type \'property\'>"
  }
  member {
    name: "weights"
    mtype: "<type \'property\'>"
  }
  member_method {
    name: "__init__"
    argspec: "args=[\'self\', \'units\', \'activation\', \'recurrent_activation\', \'use_bias\', \'kernel_initializer\', \'recurrent_initializer\', \'bias_initializer\', \'unit_forget_bias\', \'kernel_regularizer\', \'recurrent_regularizer\', \'bias_regularizer\', \'activity_regularizer\', \'kernel_constraint\', \'recurrent_constraint\', \'bias_constraint\', \'dropout\', \'recurrent_dropout\', \'implementation\', \'return_sequences\', \'return_state\', \'go_backwards\', \'stateful\', \'unroll\'], varargs=None, keywords=kwargs, defaults=[\'tanh\', \'hard_sigmoid\', \'True\', \'glorot_uniform\', \'orthogonal\', \'zeros\', \'True\', \'None\', \'None\', \'None\', \'None\', \'None\', \'None\', \'None\', \'0.0\', \'0.0\', \'1\', \'False\', \'False\', \'False\', \'False\', \'False\'], "
  }
  member_method {
    name: "add_loss"
    argspec: "args=[\'self\', \'losses\', \'inputs\'], varargs=None, keywords=None, defaults=[\'None\'], "
  }
  member_method {
    name: "add_metric"
    argspec: "args=[\'self\', \'value\', \'aggregation\', \'name\'], varargs=None, keywords=None, defaults=[\'None\', \'None\'], "
  }
  member_method {
    name: "add_update"
    argspec: "args=[\'self\', \'updates\', \'inputs\'], varargs=None, keywords=None, defaults=[\'None\'], "
  }
  member_method {
    name: "add_variable"
    argspec: "args=[\'self\'], varargs=args, keywords=kwargs, defaults=None"
  }
  member_method {
    name: "add_weight"
    argspec: "args=[\'self\', \'name\', \'shape\', \'dtype\', \'initializer\', \'regularizer\', \'trainable\', \'constraint\', \'partitioner\', \'use_resource\', \'synchronization\', \'aggregation\'], varargs=None, keywords=kwargs, defaults=[\'None\', \'None\', \'None\', \'None\', \'None\', \'None\', \'None\', \'VariableSynchronization.AUTO\', \'VariableAggregation.NONE\'], "
  }
  member_method {
    name: "apply"
    argspec: "args=[\'self\', \'inputs\'], varargs=args, keywords=kwargs, defaults=None"
  }
  member_method {
    name: "build"
    argspec: "args=[\'self\', \'input_shape\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "call"
    argspec: "args=[\'self\', \'inputs\', \'mask\', \'training\', \'initial_state\'], varargs=None, keywords=None, defaults=[\'None\', \'None\', \'None\'], "
  }
  member_method {
    name: "compute_mask"
    argspec: "args=[\'self\', \'inputs\', \'mask\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "compute_output_shape"
    argspec: "args=[\'self\', \'input_shape\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "count_params"
    argspec: "args=[\'self\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "from_config"
    argspec: "args=[\'cls\', \'config\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "get_config"
    argspec: "args=[\'self\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "get_initial_state"
    argspec: "args=[\'self\', \'inputs\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "get_input_at"
    argspec: "args=[\'self\', \'node_index\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "get_input_mask_at"
    argspec: "args=[\'self\', \'node_index\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "get_input_shape_at"
    argspec: "args=[\'self\', \'node_index\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "get_losses_for"
    argspec: "args=[\'self\', \'inputs\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "get_output_at"
    argspec: "args=[\'self\', \'node_index\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "get_output_mask_at"
    argspec: "args=[\'self\', \'node_index\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "get_output_shape_at"
    argspec: "args=[\'self\', \'node_index\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "get_updates_for"
    argspec: "args=[\'self\', \'inputs\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "get_weights"
    argspec: "args=[\'self\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "reset_states"
    argspec: "args=[\'self\', \'states\'], varargs=None, keywords=None, defaults=[\'None\'], "
  }
  member_method {
    name: "set_weights"
    argspec: "args=[\'self\', \'weights\'], varargs=None, keywords=None, defaults=None"
  }
}
