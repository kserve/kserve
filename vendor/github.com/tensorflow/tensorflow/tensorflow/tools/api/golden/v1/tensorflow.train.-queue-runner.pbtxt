path: "tensorflow.train.QueueRunner"
tf_class {
  is_instance: "<class \'tensorflow.python.training.queue_runner_impl.QueueRunner\'>"
  is_instance: "<type \'object\'>"
  member {
    name: "cancel_op"
    mtype: "<type \'property\'>"
  }
  member {
    name: "close_op"
    mtype: "<type \'property\'>"
  }
  member {
    name: "enqueue_ops"
    mtype: "<type \'property\'>"
  }
  member {
    name: "exceptions_raised"
    mtype: "<type \'property\'>"
  }
  member {
    name: "name"
    mtype: "<type \'property\'>"
  }
  member {
    name: "queue"
    mtype: "<type \'property\'>"
  }
  member {
    name: "queue_closed_exception_types"
    mtype: "<type \'property\'>"
  }
  member_method {
    name: "__init__"
    argspec: "args=[\'self\', \'queue\', \'enqueue_ops\', \'close_op\', \'cancel_op\', \'queue_closed_exception_types\', \'queue_runner_def\', \'import_scope\'], varargs=None, keywords=None, defaults=[\'None\', \'None\', \'None\', \'None\', \'None\', \'None\', \'None\'], "
  }
  member_method {
    name: "create_threads"
    argspec: "args=[\'self\', \'sess\', \'coord\', \'daemon\', \'start\'], varargs=None, keywords=None, defaults=[\'None\', \'False\', \'False\'], "
  }
  member_method {
    name: "from_proto"
    argspec: "args=[\'queue_runner_def\', \'import_scope\'], varargs=None, keywords=None, defaults=[\'None\'], "
  }
  member_method {
    name: "to_proto"
    argspec: "args=[\'self\', \'export_scope\'], varargs=None, keywords=None, defaults=[\'None\'], "
  }
}
