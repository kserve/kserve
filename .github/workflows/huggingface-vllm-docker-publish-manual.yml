name: Huggingface vLLM Docker Publisher

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Huggingface vLLM image version to publish"
        required: true

env:
  IMAGE_NAME: huggingfaceserver
  IMAGE_REPO: kserve

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Build and push vLLM CPU images (multi-arch).
  # See also https://docs.docker.com/build/ci/github-actions/multi-platform/#distribute-build-across-multiple-runners
  build-cpu:
    strategy:
      fail-fast: false
      matrix:
        include:
          - version: ${{ inputs.version }}
            file: python/huggingface_server_cpu.Dockerfile
            os: ubuntu-latest
            platform: linux/amd64
          - version: ${{ inputs.version }}
            file: python/huggingface_server_cpu.Dockerfile
            os: ubuntu-24.04-arm
            platform: linux/arm64
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
      - name: Free-up disk space
        uses: ./.github/actions/free-up-disk-space
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV
      - name: Export image id variable
        run: |
          # Compose image name from env variables
          IMAGE_ID=$IMAGE_REPO/$IMAGE_NAME
          
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          echo IMAGE_ID=$IMAGE_ID >> $GITHUB_ENV
      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          context: python
          file: ${{ matrix.file }}
          platforms: ${{ matrix.platform }}
          tags: ${{ env.IMAGE_ID }}
          outputs: type=image,push-by-digest=true,name-canonical=true,push=true
          sbom: true
          provenance: false
      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${digest#sha256:}"
      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1

  # Build and push vLLM GPU image (amd64 only).
  build-gpu:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
      - name: Free-up disk space
        uses: ./.github/actions/free-up-disk-space
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Export image id and version variable
        run: |
          # Compose image name from env variables
          IMAGE_ID=$IMAGE_REPO/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Add gpu suffix to image tag
          VERSION="${{ inputs.version }}-gpu"
          # Add v prefix to version if not present
          if [[ "$VERSION" != v* ]]; then
            VERSION="v$VERSION"
          fi

          echo IMAGE_ID=$IMAGE_ID >> $GITHUB_ENV
          echo VERSION=$VERSION >> $GITHUB_ENV
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64
          context: python
          file: python/huggingface_server.Dockerfile
          push: true
          tags: ${{ env.IMAGE_ID }}:${{ env.VERSION }}
          provenance: false
          sbom: true

  # Merge digests and create multi-arch manifest for CPU image
  merge-cpu:
    runs-on: ubuntu-latest
    needs: build-cpu
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-*
          merge-multiple: true
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Export version variable
        run: |
          # Compose image name from env variables
          IMAGE_ID=$IMAGE_REPO/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Add v prefix to version if not present
          VERSION=${{ inputs.version }}
          if [[ "$VERSION" != v* ]]; then
            VERSION="v$VERSION"
          fi

          echo VERSION=$VERSION >> $GITHUB_ENV
          echo IMAGE_ID=$IMAGE_ID >> $GITHUB_ENV
      - name: Create manifest list and push
        working-directory: ${{ runner.temp }}/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.IMAGE_ID }}@sha256:%s ' *)
      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.IMAGE_ID }}:${{ env.VERSION }}
