# coding: utf-8

"""
    KFServing

    Python SDK for KFServing  # noqa: E501

    OpenAPI spec version: v0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from kfserving.sdk.models.io_k8s_apimachinery_pkg_apis_meta_v1_time import IoK8sApimachineryPkgApisMetaV1Time  # noqa: F401,E501


class IoK8sApiCoreV1PodLogOptions(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'api_version': 'str',
        'container': 'str',
        'follow': 'bool',
        'kind': 'str',
        'limit_bytes': 'int',
        'previous': 'bool',
        'since_seconds': 'int',
        'since_time': 'IoK8sApimachineryPkgApisMetaV1Time',
        'tail_lines': 'int',
        'timestamps': 'bool'
    }

    attribute_map = {
        'api_version': 'apiVersion',
        'container': 'container',
        'follow': 'follow',
        'kind': 'kind',
        'limit_bytes': 'limitBytes',
        'previous': 'previous',
        'since_seconds': 'sinceSeconds',
        'since_time': 'sinceTime',
        'tail_lines': 'tailLines',
        'timestamps': 'timestamps'
    }

    def __init__(self, api_version=None, container=None, follow=None, kind=None, limit_bytes=None, previous=None, since_seconds=None, since_time=None, tail_lines=None, timestamps=None):  # noqa: E501
        """IoK8sApiCoreV1PodLogOptions - a model defined in Swagger"""  # noqa: E501

        self._api_version = None
        self._container = None
        self._follow = None
        self._kind = None
        self._limit_bytes = None
        self._previous = None
        self._since_seconds = None
        self._since_time = None
        self._tail_lines = None
        self._timestamps = None
        self.discriminator = None

        if api_version is not None:
            self.api_version = api_version
        if container is not None:
            self.container = container
        if follow is not None:
            self.follow = follow
        if kind is not None:
            self.kind = kind
        if limit_bytes is not None:
            self.limit_bytes = limit_bytes
        if previous is not None:
            self.previous = previous
        if since_seconds is not None:
            self.since_seconds = since_seconds
        if since_time is not None:
            self.since_time = since_time
        if tail_lines is not None:
            self.tail_lines = tail_lines
        if timestamps is not None:
            self.timestamps = timestamps

    @property
    def api_version(self):
        """Gets the api_version of this IoK8sApiCoreV1PodLogOptions.  # noqa: E501

        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources  # noqa: E501

        :return: The api_version of this IoK8sApiCoreV1PodLogOptions.  # noqa: E501
        :rtype: str
        """
        return self._api_version

    @api_version.setter
    def api_version(self, api_version):
        """Sets the api_version of this IoK8sApiCoreV1PodLogOptions.

        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources  # noqa: E501

        :param api_version: The api_version of this IoK8sApiCoreV1PodLogOptions.  # noqa: E501
        :type: str
        """

        self._api_version = api_version

    @property
    def container(self):
        """Gets the container of this IoK8sApiCoreV1PodLogOptions.  # noqa: E501

        The container for which to stream logs. Defaults to only container if there is one container in the pod.  # noqa: E501

        :return: The container of this IoK8sApiCoreV1PodLogOptions.  # noqa: E501
        :rtype: str
        """
        return self._container

    @container.setter
    def container(self, container):
        """Sets the container of this IoK8sApiCoreV1PodLogOptions.

        The container for which to stream logs. Defaults to only container if there is one container in the pod.  # noqa: E501

        :param container: The container of this IoK8sApiCoreV1PodLogOptions.  # noqa: E501
        :type: str
        """

        self._container = container

    @property
    def follow(self):
        """Gets the follow of this IoK8sApiCoreV1PodLogOptions.  # noqa: E501

        Follow the log stream of the pod. Defaults to false.  # noqa: E501

        :return: The follow of this IoK8sApiCoreV1PodLogOptions.  # noqa: E501
        :rtype: bool
        """
        return self._follow

    @follow.setter
    def follow(self, follow):
        """Sets the follow of this IoK8sApiCoreV1PodLogOptions.

        Follow the log stream of the pod. Defaults to false.  # noqa: E501

        :param follow: The follow of this IoK8sApiCoreV1PodLogOptions.  # noqa: E501
        :type: bool
        """

        self._follow = follow

    @property
    def kind(self):
        """Gets the kind of this IoK8sApiCoreV1PodLogOptions.  # noqa: E501

        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds  # noqa: E501

        :return: The kind of this IoK8sApiCoreV1PodLogOptions.  # noqa: E501
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this IoK8sApiCoreV1PodLogOptions.

        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds  # noqa: E501

        :param kind: The kind of this IoK8sApiCoreV1PodLogOptions.  # noqa: E501
        :type: str
        """

        self._kind = kind

    @property
    def limit_bytes(self):
        """Gets the limit_bytes of this IoK8sApiCoreV1PodLogOptions.  # noqa: E501

        If set, the number of bytes to read from the server before terminating the log output. This may not display a complete final line of logging, and may return slightly more or slightly less than the specified limit.  # noqa: E501

        :return: The limit_bytes of this IoK8sApiCoreV1PodLogOptions.  # noqa: E501
        :rtype: int
        """
        return self._limit_bytes

    @limit_bytes.setter
    def limit_bytes(self, limit_bytes):
        """Sets the limit_bytes of this IoK8sApiCoreV1PodLogOptions.

        If set, the number of bytes to read from the server before terminating the log output. This may not display a complete final line of logging, and may return slightly more or slightly less than the specified limit.  # noqa: E501

        :param limit_bytes: The limit_bytes of this IoK8sApiCoreV1PodLogOptions.  # noqa: E501
        :type: int
        """

        self._limit_bytes = limit_bytes

    @property
    def previous(self):
        """Gets the previous of this IoK8sApiCoreV1PodLogOptions.  # noqa: E501

        Return previous terminated container logs. Defaults to false.  # noqa: E501

        :return: The previous of this IoK8sApiCoreV1PodLogOptions.  # noqa: E501
        :rtype: bool
        """
        return self._previous

    @previous.setter
    def previous(self, previous):
        """Sets the previous of this IoK8sApiCoreV1PodLogOptions.

        Return previous terminated container logs. Defaults to false.  # noqa: E501

        :param previous: The previous of this IoK8sApiCoreV1PodLogOptions.  # noqa: E501
        :type: bool
        """

        self._previous = previous

    @property
    def since_seconds(self):
        """Gets the since_seconds of this IoK8sApiCoreV1PodLogOptions.  # noqa: E501

        A relative time in seconds before the current time from which to show logs. If this value precedes the time a pod was started, only logs since the pod start will be returned. If this value is in the future, no logs will be returned. Only one of sinceSeconds or sinceTime may be specified.  # noqa: E501

        :return: The since_seconds of this IoK8sApiCoreV1PodLogOptions.  # noqa: E501
        :rtype: int
        """
        return self._since_seconds

    @since_seconds.setter
    def since_seconds(self, since_seconds):
        """Sets the since_seconds of this IoK8sApiCoreV1PodLogOptions.

        A relative time in seconds before the current time from which to show logs. If this value precedes the time a pod was started, only logs since the pod start will be returned. If this value is in the future, no logs will be returned. Only one of sinceSeconds or sinceTime may be specified.  # noqa: E501

        :param since_seconds: The since_seconds of this IoK8sApiCoreV1PodLogOptions.  # noqa: E501
        :type: int
        """

        self._since_seconds = since_seconds

    @property
    def since_time(self):
        """Gets the since_time of this IoK8sApiCoreV1PodLogOptions.  # noqa: E501

        An RFC3339 timestamp from which to show logs. If this value precedes the time a pod was started, only logs since the pod start will be returned. If this value is in the future, no logs will be returned. Only one of sinceSeconds or sinceTime may be specified.  # noqa: E501

        :return: The since_time of this IoK8sApiCoreV1PodLogOptions.  # noqa: E501
        :rtype: IoK8sApimachineryPkgApisMetaV1Time
        """
        return self._since_time

    @since_time.setter
    def since_time(self, since_time):
        """Sets the since_time of this IoK8sApiCoreV1PodLogOptions.

        An RFC3339 timestamp from which to show logs. If this value precedes the time a pod was started, only logs since the pod start will be returned. If this value is in the future, no logs will be returned. Only one of sinceSeconds or sinceTime may be specified.  # noqa: E501

        :param since_time: The since_time of this IoK8sApiCoreV1PodLogOptions.  # noqa: E501
        :type: IoK8sApimachineryPkgApisMetaV1Time
        """

        self._since_time = since_time

    @property
    def tail_lines(self):
        """Gets the tail_lines of this IoK8sApiCoreV1PodLogOptions.  # noqa: E501

        If set, the number of lines from the end of the logs to show. If not specified, logs are shown from the creation of the container or sinceSeconds or sinceTime  # noqa: E501

        :return: The tail_lines of this IoK8sApiCoreV1PodLogOptions.  # noqa: E501
        :rtype: int
        """
        return self._tail_lines

    @tail_lines.setter
    def tail_lines(self, tail_lines):
        """Sets the tail_lines of this IoK8sApiCoreV1PodLogOptions.

        If set, the number of lines from the end of the logs to show. If not specified, logs are shown from the creation of the container or sinceSeconds or sinceTime  # noqa: E501

        :param tail_lines: The tail_lines of this IoK8sApiCoreV1PodLogOptions.  # noqa: E501
        :type: int
        """

        self._tail_lines = tail_lines

    @property
    def timestamps(self):
        """Gets the timestamps of this IoK8sApiCoreV1PodLogOptions.  # noqa: E501

        If true, add an RFC3339 or RFC3339Nano timestamp at the beginning of every line of log output. Defaults to false.  # noqa: E501

        :return: The timestamps of this IoK8sApiCoreV1PodLogOptions.  # noqa: E501
        :rtype: bool
        """
        return self._timestamps

    @timestamps.setter
    def timestamps(self, timestamps):
        """Sets the timestamps of this IoK8sApiCoreV1PodLogOptions.

        If true, add an RFC3339 or RFC3339Nano timestamp at the beginning of every line of log output. Defaults to false.  # noqa: E501

        :param timestamps: The timestamps of this IoK8sApiCoreV1PodLogOptions.  # noqa: E501
        :type: bool
        """

        self._timestamps = timestamps

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(IoK8sApiCoreV1PodLogOptions, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, IoK8sApiCoreV1PodLogOptions):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
