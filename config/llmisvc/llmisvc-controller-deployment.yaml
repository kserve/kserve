---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kserve-llmisvc-controller-manager
  namespace: kserve
  labels:
    app.kubernetes.io/name: kserve-llmisvc-controller
    app.kubernetes.io/component: controller
    control-plane: kserve-llmisvc-controller-manager
---
apiVersion: v1
kind: Service
metadata:
  name: kserve-llmisvc-controller-manager-service
  namespace: kserve
  labels:
    app.kubernetes.io/name: kserve-llmisvc-controller
    app.kubernetes.io/component: controller
    control-plane: kserve-llmisvc-controller-manager
spec:
  ports:
    - name: webhook-server
      port: 443
      protocol: TCP
      targetPort: 9443
    - name: metrics
      port: 8443
      protocol: TCP
      targetPort: 8443
  selector:
    app.kubernetes.io/name: kserve-llmisvc-controller
    control-plane: kserve-llmisvc-controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kserve-llmisvc-controller-manager
  namespace: kserve
  labels:
    app.kubernetes.io/name: kserve-llmisvc-controller
    app.kubernetes.io/component: controller
    control-plane: kserve-llmisvc-controller-manager
    controller-tools.k8s.io: "1.0"
  annotations:
    prometheus.io/scrape: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kserve-llmisvc-controller
      control-plane: kserve-llmisvc-controller-manager
      controller-tools.k8s.io: "1.0"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kserve-llmisvc-controller
        app.kubernetes.io/component: controller
        control-plane: kserve-llmisvc-controller-manager
        controller-tools.k8s.io: "1.0"
      annotations:
        kubectl.kubernetes.io/default-container: manager
    spec:
      serviceAccountName: kserve-llmisvc-controller-manager
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      terminationGracePeriodSeconds: 10
      containers:
        - name: manager
          image: kserve/llmisvc-controller:latest
          imagePullPolicy: Never
          command:
            - /manager
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          args:
            - "--metrics-addr=0.0.0.0:8443"
            - "--leader-elect"
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
            timeoutSeconds: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 1
            failureThreshold: 3
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 10m
              memory: 64Mi
          ports:
            - containerPort: 9443
              name: webhook-server
              protocol: TCP
            - containerPort: 8443
              name: metrics
              protocol: TCP
          volumeMounts:
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: cert
              readOnly: true
      volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: kserve-webhook-server-cert
