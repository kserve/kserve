
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1-0.20200901165317-c7154a3a4603
  creationTimestamp: null
  name: trainedmodels.serving.kubeflow.org
spec:
  group: serving.kubeflow.org
  names:
    kind: TrainedModel
    listKind: TrainedModelList
    plural: trainedmodels
    shortNames:
    - tm
    singular: trainedmodel
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.url
      name: URL
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: TrainedModel is the Schema for the TrainedModel API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TrainedModelSpec defines the trained model spec
            properties:
              inferenceService:
                description: parent inference service to deploy to
                type: string
              model:
                description: Predictor model spec
                properties:
                  framework:
                    description: 'Machine Learning <framework name> The values could
                      be: "tensorflow","pytorch","sklearn","onnx","xgboost", "myawesomeinternalframework"
                      etc.'
                    type: string
                  memory:
                    anyOf:
                    - type: integer
                    - type: string
                    description: Maximum memory this model will consume, this field
                      is used to decide if a model server has enough memory to load
                      this model.
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  storageUri:
                    description: Storage URI for the model repository
                    type: string
                required:
                - framework
                - storageUri
                type: object
            required:
            - inferenceService
            - model
            type: object
          status:
            description: TrainedModelStatus defines the observed state of TrainedModel
            properties:
              address:
                description: Addressable endpoint for the deployed trained model http://<inferenceservice.metadata.name>/v1/models/<trainedmodel>.metadata.name
                properties:
                  url:
                    type: Any
                type: object
              conditions:
                description: Conditions the latest available observations of a resource's
                  current state.
                items:
                  description: 'Conditions defines a readiness condition for a Knative
                    resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transitioned from one status to another. We use VolatileTime
                        in place of metav1.Time to exclude this from creating equality.Semantic
                        differences (all other things held constant).
                      type: Any
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    severity:
                      description: Severity with which to treat failures of this type
                        of condition. When this is not specified, it defaults to Error.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: ObservedGeneration is the 'Generation' of the Service
                  that was last processed by the controller.
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
