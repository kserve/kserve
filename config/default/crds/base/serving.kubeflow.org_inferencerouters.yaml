apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.1-0.20200505214252-e0d7c9d9723b
  creationTimestamp: null
  name: inferencerouters.serving.kubeflow.org
spec:
  additionalPrinterColumns:
  - JSONPath: .status.url
    name: URL
    type: string
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: Ready
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: Age
    type: date
  group: serving.kubeflow.org
  names:
    kind: InferenceRouter
    listKind: InferenceRouterList
    plural: inferencerouters
    shortNames:
    - irouter
    singular: inferencerouter
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: InferenceRouter is the Schema for the routers API
      properties:
        inline:
          description: TypeMeta describes an individual object in an API response
            or request with strings representing the type of the object and its API
            schema version. Structures that are versioned or persisted should inline
            TypeMeta.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
          type: object
        metadata:
          type: object
        spec:
          description: InferenceRouterSpec is the top level type for this resource
            A router contains a set of strategies
          properties:
            abTest:
              description: ABTestSpec is TODO
              type: object
            ensemble:
              description: EnsembleSpec is TODO
              type: object
            multiArmBandit:
              description: MultiArmBanditSpec is TODO
              type: object
            pipeline:
              description: PipelineSpec is TODO
              type: object
            routes:
              description: Routes is a list of route which can receive traffic All
                routes are expected to have an equivalent data plane interface
              items:
                description: RouteSpec defines the available routes in this router.
                  Route functions reference routes by Name
                properties:
                  name:
                    description: The name for the route
                    type: string
                  url:
                    description: The URL of the route
                    type: string
                required:
                - name
                - url
                type: object
              type: array
            splitter:
              description: SplitterSpec defines a simple weighted traffic split interface
              properties:
                weights:
                  description: Weights defines the weights of the routes
                  items:
                    description: WeightsSpec defines a simple weighted traffic split
                      interface
                    properties:
                      name:
                        description: The name for the route
                        type: string
                      weight:
                        description: The weight to send traffic to this route.
                        type: integer
                    required:
                    - name
                    - weight
                    type: object
                  type: array
              type: object
          required:
          - routes
          type: object
        status:
          description: InferenceRouterStatus defines the observed state of resource
          properties:
            address:
              description: Ducktype for addressable
              properties:
                url:
                  description: URL is an alias of url.URL. It has custom json marshal
                    methods that enable it to be used in K8s CRDs such that the CRD
                    resource will have the URL but operator code can can work with
                    url.URL struct
                  type: string
              type: object
            conditions:
              description: Conditions the latest available observations of a resource's
                current state. +patchMergeKey=type +patchStrategy=merge
              items:
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time the condition
                      transitioned from one status to another. We use VolatileTime
                      in place of metav1.Time to exclude this from creating equality.Semantic
                      differences (all other things held constant).
                    type: string
                  message:
                    description: A human readable message indicating details about
                      the transition.
                    type: string
                  reason:
                    description: The reason for the condition's last transition.
                    type: string
                  severity:
                    description: Severity with which to treat failures of this type
                      of condition. When this is not specified, it defaults to Error.
                    type: string
                  status:
                    description: Status of the condition, one of True, False, Unknown.
                      +required
                    type: string
                  type:
                    description: Type of condition. +required
                    type: string
                required:
                - type
                - status
                type: object
              type: array
            observedGeneration:
              description: ObservedGeneration is the 'Generation' of the Service that
                was last processed by the controller.
              format: int64
              type: integer
          type: object
      required:
      - inline
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
