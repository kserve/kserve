# Copyright 2025 The KServe Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# coding: utf-8

"""
    KServe

    Python SDK for KServe  # noqa: E501

    The version of the OpenAPI document: v0.1
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import kserve
from kserve.models.github_com_kserve_kserve_pkg_apis_distributed_v1alpha1_distributed_inference_service_list import GithubComKserveKservePkgApisDistributedV1alpha1DistributedInferenceServiceList  # noqa: E501
from kserve.rest import ApiException

class TestGithubComKserveKservePkgApisDistributedV1alpha1DistributedInferenceServiceList(unittest.TestCase):
    """GithubComKserveKservePkgApisDistributedV1alpha1DistributedInferenceServiceList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test GithubComKserveKservePkgApisDistributedV1alpha1DistributedInferenceServiceList
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = kserve.models.github_com_kserve_kserve_pkg_apis_distributed_v1alpha1_distributed_inference_service_list.GithubComKserveKservePkgApisDistributedV1alpha1DistributedInferenceServiceList()  # noqa: E501
        if include_optional :
            return GithubComKserveKservePkgApisDistributedV1alpha1DistributedInferenceServiceList(
                api_version = '0', 
                items = [
                    kserve.models.github/com/kserve/kserve/pkg/apis/distributed/v1alpha1/distributed_inference_service.github.com.kserve.kserve.pkg.apis.distributed.v1alpha1.DistributedInferenceService(
                        api_version = '0', 
                        kind = '0', 
                        metadata = None, 
                        spec = None, 
                        status = None, )
                    ], 
                kind = '0', 
                metadata = None
            )
        else :
            return GithubComKserveKservePkgApisDistributedV1alpha1DistributedInferenceServiceList(
                items = [
                    kserve.models.github/com/kserve/kserve/pkg/apis/distributed/v1alpha1/distributed_inference_service.github.com.kserve.kserve.pkg.apis.distributed.v1alpha1.DistributedInferenceService(
                        api_version = '0', 
                        kind = '0', 
                        metadata = None, 
                        spec = None, 
                        status = None, )
                    ],
        )

    def testGithubComKserveKservePkgApisDistributedV1alpha1DistributedInferenceServiceList(self):
        """Test GithubComKserveKservePkgApisDistributedV1alpha1DistributedInferenceServiceList"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
